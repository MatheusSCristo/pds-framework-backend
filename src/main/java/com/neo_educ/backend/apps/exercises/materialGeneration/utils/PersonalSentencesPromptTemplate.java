package com.neo_educ.backend.apps.exercises.materialGeneration.utils;

import com.neo_educ.backend.apps.exercises.athlete.dto.AthleteResponseDTO;
import com.neo_educ.backend.apps.exercises.athlete.enums.InterestsEnum;
import com.neo_educ.backend.apps.exercises.materialGeneration.dto.GenerateAthleteActivityDTO;
import com.neo_educ.backend.apps.exercises.materialGeneration.dto.GenerateExerciseDTO;
import com.neo_educ.backend.apps.exercises.materialGeneration.dto.GenerateMaterialDTO;
import com.neo_educ.backend.apps.exercises.materialGeneration.dto.MetricsAverageBySubject;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class PersonalSentencesPromptTemplate {

    public String createWorkoutprompt(String topic) {
        return "Voc√™ √© um assistente para personal trainers. Quando o personal digitar um assunto (por exemplo: Treino de For√ßa para Iniciantes ou Rotina de Cardio para Emagrecimento), voc√™ deve gerar um plano de treino completo para um atleta. O plano deve ser objetivo, pr√°tico e adaptado aos objetivos do atleta. O personal pode usar esse plano diretamente em suas sess√µes.\n"
                + "\n"
                + "O plano deve conter:\n"
                + "- Objetivo(s) do treino\n"
                + "- Equipamentos necess√°rios (se houver)\n"
                + "- Dura√ß√£o estimada\n"
                + "- Estrutura do treino (com sugest√µes de aquecimento, parte principal e desaquecimento)\n"
                + "- Dicas para o personal trainer\n"
                + "- Sugest√µes de atividades complementares ou recupera√ß√£o (opcional)\n"
                + "Esse √© o assunto: " + topic;
    }

    public String createMaterialPrompt(GenerateMaterialDTO infos) {
        StringBuilder prompt = new StringBuilder();

        prompt.append("Voc√™ √© um assistente especializado em cria√ß√£o de materiais para treinos. ")
                .append("Sua tarefa √© gerar uma lista de 10 exerc√≠cios ou dicas de treino, ")
                .append("baseadas no tipo de treino/foco, n√≠vel do atleta e, quando fornecidos, seus interesses pessoais. ")
                .append("O tipo de treino/foco √© ").append(infos.topic()).append(", ")
                .append("o n√≠vel do atleta √© ").append(infos.level()).append(" ");

        if (infos.goals() != null && !infos.goals().isEmpty()) {
            prompt.append("e os interesses do atleta s√£o ");

            String interestsText = String.join(", ", infos.goals());
            prompt.append(interestsText);
        } else {
            prompt.append("e n√£o foram fornecidos interesses espec√≠ficos");
        }

        prompt.append(". Adapte rigorosamente a complexidade dos exerc√≠cios/dicas ao n√≠vel do atleta (BEGGINER, INTERMEDIATE, ADVANCED, ELITE) ")
                .append("e concentre-se exclusivamente no tipo de treino/foco solicitado. ")
                .append("Quando fornecidos os interesses do atleta, incorpore-os nos exerc√≠cios/dicas de maneira natural. ")
                .append("Forne√ßa APENAS os exerc√≠cios ou dicas de treino numeradas de 1 a 10, sem explica√ß√µes adicionais ou tradu√ß√µes. ")
                .append("As sugest√µes devem ser pr√°ticas, √∫teis para o treinamento e contextualmente relevantes. ")
                .append("Evite sugest√µes extremamente simples ou √≥bvias para n√≠veis mais avan√ßados. ")
                .append("Por favor, gere exatamente 10 exerc√≠cios ou dicas de treino que atendam a esses crit√©rios.");

        return prompt.toString();
    }

    public String createActivityPrompt(GenerateAthleteActivityDTO activityCreateDTO, AthleteResponseDTO athlete) {
        StringBuilder prompt = new StringBuilder();

        prompt.append("Voc√™ √© um assistente especializado em atividades f√≠sicas. ")
                .append("Sua tarefa √© gerar uma lista de atividades ou rotinas de treino para um atleta, ")
                .append("baseadas no foco da atividade, n√≠vel do atleta e, quando fornecidos, seus interesses pessoais. ")
                .append("O foco da atividade √© ").append(activityCreateDTO.topic()).append(", ");
                if(activityCreateDTO.level()){
                prompt.append("o n√≠vel do atleta √© ").append(athlete.workoutLevel()).append(" ");
                }
                else{
                    prompt.append("o nivel das atividades devem ser ").append(activityCreateDTO.workoutLevel()).append(", ");
                }

                if(activityCreateDTO.interests()){
                    if (athlete.interests() != null && !athlete.interests().isEmpty()) {
                        prompt.append("e os objetivos do atleta s√£o ");
                        String interestsText = String.join(", ", athlete.interests().stream().map(InterestsEnum::toString).toList());
                        prompt.append(interestsText);

        } }else {
            prompt.append("e n√£o foram fornecidos objetivos espec√≠ficos");
        }



        prompt.append(". Adapte rigorosamente a complexidade das atividades ao n√≠vel do atleta (BEGGINER, INTERMEDIATE, ADVANCED, ELITE) ")
                .append("e concentre-se exclusivamente no foco da atividade solicitado. ")
                .append("Quando fornecidos os interesses do atleta, incorpore-os nas atividades de maneira natural. ")
                .append("Forne√ßa APENAS as atividades ou rotinas de treino numeradas de 1 a 10, sem explica√ß√µes adicionais ou tradu√ß√µes. ")
                .append("As atividades devem ser pr√°ticas, √∫teis para o desempenho e contextualmente relevantes. ")
                .append("Evite atividades extremamente simples ou √≥bvias para n√≠veis mais avan√ßados. ")
                .append("Por favor, gere exatamente 10 atividades ou rotinas de treino que atendam a esses crit√©rios.")
                .append("Por favor, n√£o escreva um texto de apresenta√ß√£o das atividades, apenas envie as 10 atividades.");

        return prompt.toString();
    }

    public String createReportPrompt(List<MetricsAverageBySubject> averagesBySubject) {
        StringBuilder prompt = new StringBuilder();

        prompt.append("Voc√™ √© um orientador de performance f√≠sica, especializado em ajudar atletas a melhorarem seu desempenho. ")
                .append("Sua tarefa √© analisar o progresso de um atleta por tipo de atividade ou grupo muscular e, com base nisso, sugerir exerc√≠cios, t√©cnicas de treino e dicas gerais para otimizar o desempenho. ")
                .append("Considere tamb√©m fornecer orienta√ß√µes sobre recupera√ß√£o, nutri√ß√£o e h√°bitos saud√°veis para o treino. ")
                .append("Responda seguindo exatamente o modelo abaixo, com se√ß√µes claras para que a resposta seja exibida no frontend. Evite qualquer introdu√ß√£o ou coment√°rio fora desse modelo. ")
                .append("Adote uma linguagem clara, objetiva e motivadora. N√£o fa√ßa cr√≠ticas negativas.\n\n");

        prompt.append("Resumo do progresso do atleta por categoria:\n");

        for (MetricsAverageBySubject grade : averagesBySubject) {
            prompt.append("- ").append(grade.topic()).append(": m√©dia de desempenho ").append(grade.average()).append("\n");
        }

        prompt.append("\nPor favor, responda exatamente conforme o seguinte modelo:\n\n");

        prompt.append("### üìù An√°lise Geral de Performance\n")
                .append("> [Breve an√°lise sobre o desempenho do atleta, apontando pontos fortes e pontos de aten√ß√£o.]\n\n")

                .append("### üìå Recomenda√ß√µes por Tipo de Treino/Grupo Muscular\n")
                .append("**[Nome da Categoria/Grupo Muscular] - M√©dia de Desempenho: [m√©dia]**\n")
                .append("> [Sugest√µes de exerc√≠cios, recursos ou t√©cnicas para otimizar o desempenho nesta categoria.]\n\n")
                .append("(Repita este bloco para cada categoria, especialmente destacando as com m√©dias mais baixas ou √°reas de foco)\n\n")

                .append("### üß† T√©cnicas de Treino Recomendadas\n")
                .append("> [Sugest√µes gerais de t√©cnicas de treino que podem ajudar o atleta, como periodiza√ß√£o, progress√£o de carga, t√©cnicas de execu√ß√£o, etc.]\n\n")

                .append("### ‚è∞ Recomenda√ß√µes de Recupera√ß√£o e H√°bitos Saud√°veis\n")
                .append("> [Dicas sobre como o atleta pode otimizar sua recupera√ß√£o, planejar sua rotina de treinos, manter h√°bitos saud√°veis de sono e nutri√ß√£o.]\n\n")
                .append("IMPORTANTE: Formate sua resposta com quebras de linha claras. Ap√≥s cada cabe√ßalho (###), d√™ uma linha em branco. Cada dica deve estar separada por uma nova linha. N√ÉO escreva todas as dicas em um √∫nico par√°grafo. Formata√ß√£o limpa √© essencial para exibi√ß√£o no frontend.")
                .append("Por favor, siga rigorosamente este modelo na resposta. N√£o inclua textos fora dessas se√ß√µes.");

        return prompt.toString();
    }

    public String createExercisePrompt(GenerateExerciseDTO infos) {
        StringBuilder prompt = new StringBuilder();

        prompt.append("Voc√™ √© um especialista em planejamento de treinos e exerc√≠cios para atletas. ")
                .append("Sua tarefa √© criar exerc√≠cios pr√°ticos e eficazes para um atleta.\n\n")

                .append("## Instru√ß√µes:\n\n")
                .append("Gere ").append(infos.quantity())
                .append(" exerc√≠cios focados no t√≥pico ").append(infos.topic())
                .append(" para um atleta de n√≠vel ").append(infos.level()).append(".\n\n");

        if (infos.interests() != null && !infos.interests().isEmpty()) {
            prompt.append("Interesses do atleta: ");
            String interests = String.join(", ", infos.interests());
            prompt.append(interests).append("\n\n");
        }

        prompt.append("## Diretrizes importantes:\n\n")
                .append("- Adapte a complexidade e o volume rigorosamente ao n√≠vel especificado (BEGGINER, INTERMEDIATE, ADVANCED, ELITE)\n")
                .append("- Varie os tipos de exerc√≠cios: levantamento de peso, cardio, funcional, alongamento, etc.\n")
                .append("- Se interesses espec√≠ficos foram fornecidos, incorpore-os de forma natural nos contextos dos exerc√≠cios\n")
                .append("- Mantenha o foco no t√≥pico de treino solicitado (e.g., grupo muscular, tipo de movimento)\n")
                .append("- Forne√ßa instru√ß√µes claras em portugu√™s para cada exerc√≠cio, incluindo s√©ries, repeti√ß√µes e dicas de execu√ß√£o\n")
                .append("- Numere os exerc√≠cios sequencialmente\n")
                .append("- IMPORTANTE: Para exerc√≠cios que solicitem a descri√ß√£o de um treino completo ou uma rotina detalhada, forne√ßa APENAS o enunciado da quest√£o. N√ÉO gere linhas em branco ou espa√ßos para escrita. Ex: 'Descreva um treino de corpo inteiro'.\n")
                .append("- Para exerc√≠cios que requerem preenchimento de informa√ß√µes espec√≠ficas (e.g., n√∫mero de s√©ries/repeti√ß√µes), voc√™ pode usar espa√ßos em branco (_______) ou colchetes [ ] normalmente.\n\n")

                .append("## Formato de resposta OBRIGAT√ìRIO:\n\n")
                .append("FORMATA√á√ÉO CR√çTICA: \n")
                .append("- N√ÉO deixe linha em branco entre o cabe√ßalho do exerc√≠cio (ex: 'Exerc√≠cio 1) ...') e suas alternativas/conte√∫do\n")
                .append("- DEIXE uma linha em branco APENAS entre exerc√≠cios diferentes\n")
                .append("- O cabe√ßalho do exerc√≠cio deve estar IMEDIATAMENTE seguido por suas instru√ß√µes/detalhes na linha seguinte\n\n")

                .append("Apresente apenas os exerc√≠cios, sem explica√ß√µes adicionais, introdu√ß√µes ou coment√°rios. Cada exerc√≠cio deve ter:\n")
                .append("1. N√∫mero do exerc√≠cio\n")
                .append("2. Instru√ß√£o clara em portugu√™s\n")
                .append("3. O exerc√≠cio propriamente dito (sem linhas para escrita quando for uma descri√ß√£o extensa)\n\n")

                .append("Exemplos de formato CORRETO:\n\n")
                .append("Para exerc√≠cios de preenchimento:\n")
                .append("Exerc√≠cio 1) Preencha os detalhes do exerc√≠cio:\n")
                .append("a) Agachamento: S√©ries: [_______] Repeti√ß√µes: [_______]\n")
                .append("b) Flex√£o: S√©ries: [_______] Repeti√ß√µes: [_______]\n\n")

                .append("Para exerc√≠cios de descri√ß√£o:\n")
                .append("Exerc√≠cio 2) Descreva a forma correta de execu√ß√£o para o Levantamento Terra, focando na seguran√ßa.\n\n")

                .append("LEMBRE-SE: N√£o deixe linha em branco entre 'Exerc√≠cio X)...' e as instru√ß√µes 'a)', 'b)', etc. ")
                .append("A linha em branco deve existir APENAS entre um exerc√≠cio completo e o pr√≥ximo exerc√≠cio.\n\n")

                .append("Gere os exerc√≠cios agora, seguindo rigorosamente essas diretrizes de formata√ß√£o.");

        return prompt.toString();
    }

}